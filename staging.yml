---
- hosts: staging
  become: yes
  tasks:

  - name: update nodejs package 
    ansible.builtin.shell: curl -fsSL https://deb.nodesource.com/setup_15.x | sudo -E bash -

  - name: install nodejs
    apt:
      name: nodejs
      state: present

  - name: install zip
    apt:
      name: zip
      state: present

  - name: Creates directory
    file:
      path: /src/www
      state: directory

  - name: Download artifact
    get_url:
      url: http://10.0.0.4:8080/job/weightCI/lastSuccessfulBuild/artifact/latest.zip
      dest: /src/www
      force_basic_auth: yes
      username: "{{ username }}"
      password: "{{ api_key }}"

  - name: Extract artifact
    ansible.builtin.unarchive:
      src: /src/www/latest.zip
      dest: /src/www
      remote_src: yes
  
  - name: Find my public ip
    uri: 
      url: http://ifconfig.me/ip
      return_content: yes
    register: ip_response

  # - name: create .env
  #   ansible.builtin.command: buildEnv.sh -u {{ url }} -i {{ id }} -s {{ secret }} -h {{ db_host }} -p {{ pass }} -n {{ user }}

  - name: Creating a .env file
    copy:
      dest: "/src/www/.env"
      content: |
        PORT=8080
        HOST=0.0.0.0
        NODE_ENV=development
        HOST_URL=http://{{ ip_response.content }}:8080
        COOKIE_ENCRYPT_PWD=superAwesomePasswordStringThatIsAtLeast32CharactersLong!
        OKTA_ORG_URL=https://{{ url }}
        OKTA_CLIENT_ID={{ id }}
        OKTA_CLIENT_SECRET={{ secret }}
        PGHOST={{ db_host }}
        PGUSERNAME={{ user }}
        PGDATABASE=postgres
        PGPASSWORD={{ pass }}
        PGPORT=5432

  - name: initialize db
    ansible.builtin.shell: node /src/www/tools/initdb.js

  - name: run app
    ansible.builtin.shell: node src/index.js
    async: 45
    poll: 0
    args:
      chdir: /src/www

  - name: echo
    ansible.builtin.shell: echo "1"